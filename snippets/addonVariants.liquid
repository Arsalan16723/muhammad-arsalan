<style>
  .activeVar_sp{{ section.id }} .colorBg{
        background: #000 !important;
    color: #fff;
  }
  .normalSelector.activeVar_sp{{ section.id }}{
    background:#000 !important;
    color:#fff !important;
    border:1px solid #000 !important;
  }
</style>
<div class="spVariants spVariantsNew">
  {% for option in product.options_with_values %}
    <div class="arVar_opValue {% if option.name contains 'Color' or option.name contains 'color' or option.name == 'Color' or option.name == 'color'%}arColoSeelct{% endif %}">
      <div class="arVar_optionName">
        <span>{{ option.name }}</span>
      </div>
      <div class="spOption spOption{{ forloop.index }}">
        {% for value in option.values %}
          <div class="spVariant_ar">
            <button
              type="button"
              id="prVariant_{{ section.id }}_{{ option.name | remove: ' ' }}"
              class="
                {% if option.name == 'Color' or option.name == 'color' %}arcolor_{{ value }} arColrOption__selector{% else %}normalSelector{% endif %}
                {% if forloop.first %}activeVar_sp{{ section.id }}{% endif %}
                prvar arVar_{{ section.id }}_{{product.id}}_{{ option.name | remove: ' ' }}
              "
              data-id="{{- variant.id -}}"
              data-value="{{- value | remove: ' ' -}}"
            >
              {% if option.name == 'Color' or option.name == 'color' %}
              <span class="arVarcolor_border arcoloredBorder_{{ value }}">
                
              </span>
              {% endif %}
              <span {% if option.name == 'Color' or option.name == 'color' %}class="colorBg"{% endif %}>
                {{ value }}
              </span>
            </button>
          </div>
        {% endfor %}
      </div>
    </div>
  {% endfor %}

  <div class="arVariantsComplete arVars_{{ product.id }}_{{ section.id }}" style="display:none;">
    {% for variant in product.variants %}
      <button
        type="button"
        data-id="{{ variant.id }}"
        data-img="ar{{- product.id -}}{{- variant.featured_media.id -}}"
        data-value="{{ variant.title }}"
        data-compare="{{ variant.compare_at_price | money_without_trailing_zeros }}"
        data-current="{{ variant.price| money_without_trailing_zeros }}"
      >
        {{ variant.title }}
      </button>
    {% endfor %}
  </div>

  <button type="button" id="value{{ section.id }}{{product.id}}" style="display:none">Get Value</button>
</div>
<script>
  // Store initial product option values
  {% for option in product.options_with_values %}
    var option{{ forloop.index }}{{ option.name | remove: ' '-}}{{ product.id }} = "{{ option.values.first }}";
  {% endfor %}

  // Function to handle option button click
  function handleOptionClick(event) {
    var element = event.currentTarget;
    var optionName = element.dataset.optionName;
    var optionValue = element.getAttribute('data-value');
    var sectionId = "{{ section.id }}";
    var productId = "{{ product.id }}";
    
    // Update active class for clicked option
    document.querySelectorAll(`.arVar_${sectionId}_${productId}_${optionName}`).forEach(function(el) {
      el.classList.remove("activeVar_sp" + sectionId);
    });
    element.classList.add("activeVar_sp" + sectionId);

    // Update option value
    window[`option${element.dataset.index}${optionName}${productId}`] = optionValue;

    // Additional handling for color option
    if (element.classList.contains('arColrOption__selector')) {
      document.querySelectorAll('.arFp_media').forEach(function(media) {
        media.classList.toggle('arBlackBg');
      });
    }

    // Trigger variant update
    document.getElementById(`value${sectionId}${productId}`).click();
  }

  // Event listener for DOMContentLoaded
  document.addEventListener('DOMContentLoaded', function() {
    {% for option in product.options_with_values %}
      document.querySelectorAll(".arVar_{{ section.id }}_{{product.id}}_{{ option.name | remove: ' ' }}").forEach(function(element) {
        // Add dataset properties for later use
        element.dataset.optionName = "{{ option.name | remove: ' ' }}";
        element.dataset.index = "{{ forloop.index }}";
        // Attach click event listener
        element.addEventListener('click', handleOptionClick);
      });
    {% endfor %}
  });

  // Event listener for variant update
  document.getElementById('value{{ section.id }}{{product.id}}').addEventListener('click', function() {
    var valueee = {% for option in product.options_with_values %}
                    window[`option{{ forloop.index }}{{ option.name | remove: ' '}}{{ product.id }}`] {% if forloop.last %};{% else %}+ " / " +{% endif %}
                  {% endfor %}

    // Check for matching variant
    document.querySelectorAll('.arVars_{{ product.id }}_{{ section.id }} button').forEach(function(button) {
      if (button.getAttribute('data-value') === valueee) {
        var dataId = button.getAttribute('data-id');
        var comparePrice = button.getAttribute('data-compare');
        var currentPrice = button.getAttribute('data-current');
        
        // Update hidden input and price elements
        document.getElementById(`spVarId_container_{{ section.id }}_{{ product.id }}`).value = dataId;
        document.getElementById(`crntPrc_Atc{{ section.id }}{{ product.id }}`).textContent = currentPrice;
        // Uncomment if needed
        // document.getElementById(`compPrc_Atc{{ section.id }}{{ product.id }}`).textContent = comparePrice;
      }
    });
  });

  // Function to close modal
  function closeModal() {
    document.querySelectorAll('.arProduct_modal').forEach(function(modal) {
      modal.style.display = 'none';
    });
  }

  // Function to trigger modal
  function triggerModal(button) {
    var targetId = button.getAttribute('data-target');
    var modal = document.getElementById(targetId);
    if (modal) {
      modal.style.display = 'block';
    }
  }
</script>

